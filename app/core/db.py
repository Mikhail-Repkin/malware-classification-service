from sqlalchemy.orm import sessionmaker
from sqlalchemy.orm import Session
from sqlalchemy import create_engine

from app.models.all_models import ModelsDB
from app.models.base import Base

# Создаем сессию
sync_engine = create_engine("sqlite:///ml_service.db")
SessionLocal = sessionmaker(autocommit=False,
                            autoflush=False,
                            bind=sync_engine)


def add_default_models(db: Session):
    """
    Добавляет три модели в базу данных.
    Args:
        session: Сеанс SQLAlchemy для взаимодействия с базой данных.
    """
    if db.query(ModelsDB).count() == 0:
        default_models = [
            ModelsDB(
                name="Random Forest",
                description="Универсальная ансамблевая модель",
                cost_in_credits=30,
            ),
            ModelsDB(
                name="MLP Classifier",
                description="Классификатор на основе нейронных сетей",
                cost_in_credits=15,
            ),
            ModelsDB(
                name="Logistic Regression",
                description="Линейная модель для классификации",
                cost_in_credits=5,
            ),
        ]
        db.add_all(default_models)
        db.commit()


def create_tables():
    #Base.metadata.drop_all(sync_engine)
    Base.metadata.create_all(sync_engine)


def get_db():
    db = SessionLocal()
    try:
        return db
    except Exception:
        db.rollback()
        raise
    finally:
        db.close()
