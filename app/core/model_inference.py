import pandas as pd
import joblib
from typing import List
import io


LABELS = {0: 'Goodware', 1: 'Malware'}


async def load_model(name):
    name_model = name.replace(" ", "_").lower()
    loaded_model = joblib.load(f"app/ml_models/{name_model}_model.joblib")

    return loaded_model


async def predict_malware(file, model_name) -> List:
    try:
        model = await load_model(model_name)  # загрузка модели

        # Использование io.BytesIO для создания буфера памяти
        buffer = io.BytesIO(file)
        if buffer:
            df = pd.read_csv(buffer)
        else:
            df = pd.read_csv(file)
        df = df.dropna()
        if "Label" in df.columns:
            df.drop(["Label"], inplace=True, axis=1)
        result = model.predict(df)
        result_with_labels = pd.Series([LABELS[label] for label in result])
        preds = pd.DataFrame(data=result_with_labels)
        preds.columns = ["label"]
        prediction_results = preds["label"].tolist()
        return prediction_results
    except Exception as e:
        print(e)
