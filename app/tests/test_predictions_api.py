from fastapi.testclient import TestClient

from worker import run_worker
from multiprocessing import Process


def read_file_as_bytes(file_path):
    with open(file_path, "rb") as file:
        file_bytes = file.read()
    return file_bytes


def test_classify_malware_task_and_download_results(client: TestClient):

    # Тест api classify_malware_task
    ################################################################
    # Запуск воркера в параллельном процессе
    worker_process = Process(target=run_worker)
    worker_process.start()

    # Создаем пользователя
    user_data = {"email": "test@example.com", "password": "password123"}
    client.post("/api/auth/sign-up", json=user_data)

    # Логиним пользователя и выдаем ему токен
    form_data = {"username": "test@example.com", "password": "password123"}
    response = client.post("/api/auth/sign-in", data=form_data)
    response_data = response.json()

    # Подготавливаем тестовые данные
    name_model = "Random Forest"
    token = response_data["access_token"]
    filepath = "app/tests/test_file/TUANDROMD_test.csv"
    file_bytes = read_file_as_bytes(filepath)

    # Отправляем POST-запрос на эндпоинт
    response = client.post(f"/api/predictions/{name_model}",
                           headers={"Authorization": f"Bearer {token}"},
                           files={"file": ("TUANDROMD_test.csv",
                                           file_bytes,
                                           "text/csv")})

    assert response.status_code == 200
    assert "prediction_id" in response.json()

    worker_process.terminate()  # закрываем воркер

    # Тест api download_results
    ################################################################
    response_data = response.json()
    pred_id = response_data["prediction_id"]

    # Отправляем GET-запрос на эндпоинт
    response = client.get(f"/api/predictions/download/{pred_id}"
                          )

    # Проверяем успешность запроса
    assert response.status_code == 200
